<?php

//alter query for journals
function wt_search_search_api_solr_query_alter(array &$call_args, SearchApiQueryInterface $query) {
  
  
//  kpr($call_args);
  
  
    if ($query->getOptions()['search id'] == wtSearchConstants::VIEW_JOURNALS) {
        $tids = wtSearchConstants::getJournalTids();
        foreach($tids as $tidKey => $tidValue) {
            $filter[] = 'is_field_ref_zeitschrift:"' . $tidValue . '"';
        }
        $call_args['params']['fq'][1] = implode(' OR ', $filter);
    }
    
    if ($query->getOptions()['search id'] == wtSearchConstants::VIEW_EBOOKS) {
        $tids = wtSearchConstants::getEbookTids();
        foreach($tids as $tidKey => $tidValue) {
            $filter[] = 'is_field_ref_zeitschrift:"' . $tidValue . '"';
        }
        $call_args['params']['fq'][1] = implode(' OR ', $filter);
    }
    
//    kpr($call_args);
}

class wtSearchConstants {

    const JOURNAL_VOCAB = 'Zeitschriftentitel';
    const VIEW_JOURNALS = 'search_api_views:hefte_solr:page';
    const VIEW_EBOOKS = 'search_api_views:hefte_solr:page_1';

    public static function getJournalTids() {
        $vocab = taxonomy_vocabulary_machine_name_load(wtSearchConstants::JOURNAL_VOCAB);
        $terms = entity_load('taxonomy_term', FALSE, array('vid' => $vocab->vid));
        foreach ($terms as $termKey => $termValue) {
            $wTerm = entity_metadata_wrapper('taxonomy_term', $termValue);

            if ($wTerm->field_zeitschrift_oder_ebook->value() == 1) {
                $tids[] = $termKey;
            }
        }
        return $tids;
    }
    
    public static function getEbookTids() {
        $vocab = taxonomy_vocabulary_machine_name_load(wtSearchConstants::JOURNAL_VOCAB);
        $terms = entity_load('taxonomy_term', FALSE, array('vid' => $vocab->vid));
        foreach ($terms as $termKey => $termValue) {
            $wTerm = entity_metadata_wrapper('taxonomy_term', $termValue);

            if ($wTerm->field_zeitschrift_oder_ebook->value() != 1) {
                $tids[] = $termKey;
            }
        }
        return $tids;
    }

}

/**
 * Implements hook_menu().
 */
//function wt_search_menu() {
//    $items = array();
//
//    $items['journals_1'] = array(
//        'title' => 'journals_1',
//        'description' => '',
//        'page callback' => 'drupal_get_form',
//        'page arguments' => array('_wt_journals_page_form'),
//        'access callback' => TRUE
//    );
//
//
//    return $items;
//}

//function _wt_journals_page_form($form, &$form_state) {
//
////    kpr($form);
//    $pages = JournalSearchService::simpleSearch($parameter);
////    kpr($pages);
//
//    $form = array();
//
////    $form['#pages'] = $pages['results'];
////    $form['#theme'] = 'journals_search_form';
//
//    $form['search_field'] = array(
//        '#type' => 'textfield',
//    );
//
//    $form['journals'] = array(
//        '#type' => 'checkboxes',
//        '#options' => wtSearchConstants::JOURNAL_TERM_TID,
//        '#title' => t('Select a journal type'),
//    );
//
//    $form['submit'] = array(
//        '#type' => 'submit',
//        '#name' => 'Filter',
//        '#value' => t('filter!'),
//        '#ajax' => array(
//            'callback' => '_ajax_search_callback',
//            'wrapper' => 'wt-journals-page-form',
//            'method' => 'replace',
//            'effect' => 'fade',
//        ),
//    );
//
////    kpr($form);
//
//
//    return $form;
//}
//
//function _wt_journals_page_form_submit($form, $form_state) {
//    
//}
//
//function _ajax_search_callback($form, &$form_state) {
//    dpm($form);
//    return $form;
//}
//
//function wt_search_preprocess_journals_search_form(&$variables) {
//
//    $pages = $variables['form']['#pages'];
//    foreach ($pages as $pageKey => $pageValue) {
//        $node = node_load($pageKey);
//        $variables['pages'][] = $node;
//    }
//}
//
///**
// * Implements hook_theme().
// */
//function wt_search_theme($existing, $type, $theme, $path) {
//    return array(
//        // Defines the form ID as a theme hook.
//        'journals_search_form' => array(
//            // Specifies 'form' as a render element.
//            'render element' => 'form',
//            'template' => 'template/wt-search-form',
//        ),
//    );
//}
